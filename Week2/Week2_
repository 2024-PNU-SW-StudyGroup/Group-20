####플러터에서 사용하는 다트 언어
간단한 다트 언어 특징
1) main 함수로 시작                                                  6) public, protected 같은 키워드가 없음
2) 변수 선언 어디서든 가능                                            7) 삼항 연산자 사용 가능
3) 모든 변수는 객체이므로, Object 클래스를 상속                        8) 변수나 함수는 밑줄이나 영문자로 시작, 숫자 포함 가능
4) 자료형이 엄격한 언어                                               9) 널 안정성을 지원
5) 제네릭 타입을 이용해 개발 가능                                      10) 비동기 처리 방식을 지원

#######다트 언어의 비동기 처리 방식
비동기란 하나의 작업이 끝나는 걸 기다리지 않고 다음 작업을 처리하게 하는 것을 의미 => 앱이 멈추지 않고 다른 동작을 할 수 있음.
async와 await 키워드를 이용해 비동기 처리를 구현
비동기 함수가 반환하는 값 처리는 then() 핸들러 함수를 이용. 
error() 핸들러도 있음 =>  함수에서 오류 발생했을 경우 예외 처리

void main() {
  checkVersion(); //비동기로 동작하므로 밑에 걸 먼저 출력하게 됨.
  print('end process');
}

//비동기로 동작하도록 처리
Future checkVersion() async {
  var version = await lookUpVersion();
 
  print(version);
}

int lookUpVersion(){
  return 12;
}

이 코드를 돌려보면 end process를 출력 후 12를 출력


########다트 언어ㅢ JSON 데이터 주고 받기
dart:convert라는 라이브러리 포함해야 됨
//서버에서 가져온 json 데이터 처리
import 'dart:convert';
void main() {
  var jsonString = '''
[
{"score": 40},
{"score": 80}
]
''';
  //jsonDecode() 함수는 JSON 형태의 데이터를 dynamic 형식의 리스트로 변환 
  var scores = jsonDecode(jsonString);
  print(scores is List);
  var firstScore = scores[0]; 
  print(firstScore is Map); //Map 형식으로 저장됨.
  print(firstScore['score'] == 40);
}

//json 데이터 파싱하여 주고 받기
//jsonEncode() 함수로 JSON 형식으로 변환 가능
import 'dart:convert';
var scores = [
  {'score': 40},
  {'score': 80},
  {'score': 100, 'overtime': true, 'special_guest': null}
];
void main() {
  var jsonText = jsonEncode(scores);
  print(jsonText ==
      '[{"score":40},{"score":80},'
          '{"score":100,"overtime":true,'
          '"special_guest":null}]');
}


