# 2024 PNU SW스터디그룹 20조

- **202155528 김민찬**
- **202155597 임도균**
- **202155600 전동훈**
- **202155584 이영민**

---

## 목차

1. [스터디 배경 및 주제](#스터디-배경-및-주제)
   - 1.1 [스터디 배경](#11-스터디-배경)
   - 1.2 [스터디 주제](#12-스터디-주제)
2. [스터디 목표 및 방식](#스터디-목표-및-방식)
   - 2.1 [스터디 목표](#21-스터디-목표)
   - 2.2 [스터디 방식](#22-스터디-방식)
3. [스터디 내용](#스터디-내용)
   - 3.1 [김민찬: 네트워크](#31-김민찬-네트워크)
   - 3.2 [임도균: AI 알고리즘](#32-임도균-ai-알고리즘)
   - 3.3 [전동훈: 알고리즘](#33-전동훈-알고리즘)
   - 3.4 [이영민: iOS 앱 개발 (SwiftUI)](#34-이영민-ios-앱-개발-swiftui)
4. [스터디 진행 결과](#스터디-진행-결과)
5. [향후 계획](#향후-계획)

---

## 스터디 배경 및 주제

### 1.1 스터디 배경
공모전 탈락으로 인해 기존의 특정 프로젝트 기반 스터디 진행은 중단되었으나, 이를 새로운 학습 기회로 전환하고자 하였습니다. 각자 관심 있는 주제를 자유롭게 학습하고 발표하며, 팀원 간 지식 공유를 통해 스터디의 목표를 재정립하였습니다.

### 1.2 스터디 주제
각 팀원이 관심 있는 분야에서 주제를 선정하여 학습을 진행합니다. 선정 주제는 **알고리즘, 네트워크, AI, iOS 개발** 등 다양한 주제를 포괄하며, 발표를 통해 상호 이해도를 높이고자 합니다.

---

## 스터디 목표 및 방식

### 2.1 스터디 목표
- 각자 관심 있는 주제를 자율적으로 학습하여 다른 팀원들에게 발표 및 피드백 과정을 통해 새로운 관점과 지식을 습득하고자 합니다.

### 2.2 스터디 방식
1. **주제 선정**
   - 알고리즘, 애플리케이션 개발, 데이터 분석, AI 등 각자의 관심사에 따라 자유롭게 주제를 선정합니다.
2. **학습 활동**
   - 선정한 주제를 학습하고, 학습 내용을 정리하여 GitHub에 업로드합니다.
3. **발표 및 공유**
   - 매주 금요일 오전 11시에 학습 내용을 공유합니다.
4. **질의응답과 피드백**
   - 발표 후 질의응답을 통해 2차 학습을 진행하며, 피드백을 주고받습니다.

---

## 스터디 내용

### 3.1 김민찬: 네트워크

#### **Application Layer**

1. **애플리케이션 계층의 역할**
   - 네트워크를 통해 서비스를 제공하는 다양한 애플리케이션들이 상호작용할 수 있도록 합니다.  
     예: 웹 브라우저의 HTTP 프로토콜을 통한 요청과 응답 처리.

2. **애플리케이션 계층의 주요 프로토콜**
   - **HTTP**: 웹 페이지 요청 및 전달.
   - **DNS**: 도메인 이름을 IP 주소로 변환.

#### **Application Layer 질문**
- **Q1**: 애플리케이션 계층과 전송 계층의 차이는?  
  **A1**: 애플리케이션 계층은 서비스 제공, 전송 계층은 데이터 전송 신뢰성 보장을 담당.

- **Q2**: HTTP와 HTTPS의 차이는?  
  **A2**: HTTPS는 HTTP의 보안 버전으로, SSL/TLS를 사용하여 암호화된 통신을 제공합니다.

---

### 3.2 임도균: AI 알고리즘

#### **AI Search Algorithms**

1. **BFS (Breadth First Search)**
   - 루트 노드의 모든 자식 노드를 탐색 후 다음 단계로 넘어가는 탐색 방식.
   - **장점**: 최단 경로 보장.  
   - **단점**: 탐색 시간이 증가.

2. **Hill Climbing Search**
   - 현재 상태에서 가장 좋은 값이 있는 솔루션으로 이동.
   - **장점**: 메모리 효율적.  
   - **단점**: 지역 최적화 문제 발생 가능.

3. **Best First Search**
   - 평가 함수 값이 가장 좋은 노드를 선택.

#### **AI Algorithms 질문**
- **Q1**: 검색 알고리즘이란?  
  **A1**: 목표 상태를 찾기 위한 절차로, 맹목적 탐색과 경험적 탐색으로 나뉩니다.

- **Q2**: 맹목적 탐색과 경험적 탐색의 차이는?  
  **A2**: 맹목적 탐색은 모든 경로 탐색, 경험적 탐색은 효율적 경로 탐색.

---

### 3.3 전동훈: 알고리즘

#### **그리디 알고리즘**
- 문제 해결을 위해 현재 최선의 선택을 반복적으로 수행.
- 활용 사례: 다익스트라 알고리즘, Kruskal 알고리즘.

#### **재귀 알고리즘**
- 작은 문제로 분할하여 자기 자신을 호출하며 해결.
- 활용 사례: 팩토리얼, 피보나치 수열.

#### **백트래킹 알고리즘**
- 조건을 만족하지 않는 경로를 가지치기하며 탐색.

#### **알고리즘 질문**
- **Q1**: 그리디 알고리즘이 항상 최적해를 보장하나요?  
  **A1**: 아니요, 탐욕적 선택 속성과 최적 부분 구조가 있는 문제에만 최적해를 보장합니다.

- **Q2**: 재귀 알고리즘의 종료 조건이 필요한 이유는?  
  **A2**: 종료 조건이 없으면 무한 재귀 호출로 인해 스택 오버플로 발생.

---

### 3.4 이영민: iOS 앱 개발 (SwiftUI)

#### **SwiftUI 기본 구조**
- 화면은 **View**라는 구조체로 구성.

#### **View Builder**
- 뷰를 튜플로 묶어 선언.  
  - **HStack**: 가로 방향.  
  - **VStack**: 세로 방향.

#### **View Modifier**
- `.수정자명`으로 선언하며 뷰를 수정.

#### **Locals in @ViewBuilder**
- `@State`를 사용하여 뷰 내 변수 수정 가능.

---

## 스터디 진행 결과

- **김민찬**: 네트워크 애플리케이션 계층 학습과 HTTP/HTTPS의 차이를 명확히 이해.
- **임도균**: AI 탐색 알고리즘을 Pseudo Code 기반으로 학습 및 발표.
- **전동훈**: 알고리즘의 장단점을 발표하며 코드 최적화 논의.
- **이영민**: SwiftUI 구조 및 뷰 빌더 활용을 시연.

### 주요 인사이트
- **지식 확장**: 알고리즘, 네트워크, iOS 등 다양한 주제를 다루며 이해도를 높임.
- **2차 학습 효과**: 발표와 질의응답을 통한 심화 학습 경험.

---

## 향후 계획

- **김민찬**: 네트워크 지식을 활용한 프로젝트 수행.
- **임도균**: 다양한 AI 알고리즘 학습 및 코드 작성.
- **전동훈**: 정렬 알고리즘 정리 및 문제 풀이.
- **이영민**: 유튜브 CS193p 강의를 통한 SwiftUI 심화 학습.
